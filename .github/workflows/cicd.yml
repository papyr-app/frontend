name: CI/CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  lint-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18'

      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps

      - name: Run prettier
        run: |
          npm run format

      - name: Run eslint
        run: |
          npm run lint || true

  build-and-push:
    needs: lint-format
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }} 
      image_tag: ${{ steps.set-env.outputs.image_tag }} 
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set API_URL for develop
        if: github.ref == 'refs/heads/develop'
        run: echo "BACKEND_URL=test-api.papyr-app.xyz" >> $GITHUB_ENV

      - name: Set API_URL for main
        if: github.ref == 'refs/heads/main'
        run: echo "BACKEND_URL=api.papyr-app.xyz" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set environment variables
        id: set-env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            ENVIRONMENT="test"
            IMAGE_TAG="test-${{ github.sha }}"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENVIRONMENT="prod"
            IMAGE_TAG="prod-${{ github.sha }}"
          fi
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.ENVIRONMENT }}
            ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}
          build-args: |
            BACKEND_URL=${{ env.BACKEND_URL }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Deploy with Helm
        env:
          ENVIRONMENT: ${{ needs.build-and-push.outputs.environment }}
          IMAGE_TAG: ${{ needs.build-and-push.outputs.image_tag }}
        run: |
          helm upgrade --install frontend ./helm --namespace=$ENVIRONMENT -f ./helm/values.$ENVIRONMENT.yaml --set image.tag=$IMAGE_TAG
